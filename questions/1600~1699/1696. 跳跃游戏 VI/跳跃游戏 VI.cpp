/* 跳跃游戏 VI.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
给你一个下标从 0 开始的整数数组 nums 和一个整数 k 。

一开始你在下标 0 处。每一步，你最多可以往前跳 k 步，但你不能跳出数组的边界。也就是说，你可以从下标 i 跳到 [i + 1， min(n - 1, i + k)] 包含 两个端点的任意位置。

你的目标是到达数组最后一个位置（下标为 n - 1 ），你的 得分 为经过的所有数字之和。

请你返回你能得到的 最大得分 。

 

示例 1：

输入：nums = [1,-1,-2,4,-7,3], k = 2
输出：7
解释：你可以选择子序列 [1,-1,4,3] （上面加粗的数字），和为 7 。
示例 2：

输入：nums = [10,-5,-2,4,0,3], k = 3
输出：17
解释：你可以选择子序列 [10,4,3] （上面加粗数字），和为 17 。
示例 3：

输入：nums = [1,-5,-20,4,-1,3,-6,-3], k = 2
输出：0
 

提示：

 1 <= nums.length, k <= 105
-104 <= nums[i] <= 104

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/jump-game-vi
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/

#include <iostream>
#include <deque>
#include "../check/CheckResult.h"

using namespace std;

class Solution {
public:
    int maxResult(vector<int>& nums, int k) {
        int i, size = nums.size(), dp = nums[0];
        deque<pair<int, int>> decreasingDps;  // dp[i]表示跳到位置i可以得到的最大分数，那么dp[i]=max(dp[i-k,i-1])+nums[i]，使用单调队列求最大值
        decreasingDps.push_back({ nums[0], 0 });

        for (i = 1; i < size; ++i) {
            while (decreasingDps.front().second < i - k) {  // k步范围以外的位置不再需要保存
                decreasingDps.pop_front();
            }

            dp = decreasingDps.front().first + nums[i];  // 队列头部始终是最大值

            while (!decreasingDps.empty() && decreasingDps.back().first <= dp) {  // 更小的dp不再需要保存
                decreasingDps.pop_back();
            }

            decreasingDps.push_back({ dp, i });
        }

        return dp;
    }
};

int main()
{
    CheckResult check;
    Solution o;

    vector<int> nums = { 1,-1,-2,4,-7,3 };
    check.checkInt(7, o.maxResult(nums, 2));

    nums = { 10,-5,-2,4,0,3 };
    check.checkInt(17, o.maxResult(nums, 3));

    nums = { 1,-5,-20,4,-1,3,-6,-3 };
    check.checkInt(0, o.maxResult(nums, 2));

    nums = { 1,1,1,-2,-2,-2,1,1,1 };
    check.checkInt(4, o.maxResult(nums, 3));

    nums = { -1,-1,-4,-4,-4,-4 };
    check.checkInt(-9, o.maxResult(nums, 3));

    nums = { -1151,9026,1498,8321,6345,-2735,7261,-61,-761,-5597,7148,-3293,7216,7976,-2760,6309,-5624,58,1356,-398,5760,9870,4616,-4723,-1966,4607,7153,6043,9739,1299,2553,9092,6965,6642,-5292,-564,9722,1126,3179,4486,1687,6187,-9642,-3583,-6574,488,-4239,-9832,-4629,-57,-7307,-5925,5388,3905,3150,6778,-6535,-5866,6299,-3205,2563,1098,891,-9109,-7722,3684,-1764,-2005,-3165,5100,-2297,3138,-781,-6484,-1593,3891,-2391,-1532,130,5925,6162,-8013,547,-3808,928,9018,8231,9764,-652,-3319,5425,-5849,-4193,6431,-4143,3371,7441,-630,7679,-4267,-9421,2993,-3957,-1442,-8442,-7868,-7405,-7673,-7940,9262,-6089,6201,740,-4819,8277,8281,-8772,-1032,-5254,-8427,1496,-490,6251,-2630,6258,2496,1641,1717,1442,-8177,-7614,5214,-2113,196,9757,3817,3546,-1906,-6023,7774,1237,-9761,-3744,9173,2256,3157,-5384,-3852,9386,-1224,-1231,3797,6532,-7110,9122,3520,-9297,-4452,8433,8252,-3769,-2168,-6193,5753,1796,8338,-6163,4656,-9825,3404,9358,2062,2083,-8414,-5463,-8942,9548,3902,-2352,4699,-2356,2057,-5319,-1716,168,-4737,612,-6260,-2438,4832,389,58,-6682,-938,-234,-8312,6326,6179,6650,6094,8258,-3293,-4423,4559,8210,-189,-9794,-3659,5592,-1965,-7770,-5020,-5175,2658,3751,-1458,-6069,-3418,3438,-9656,-6286,-4647,1934,-4306,-204,7250,-8164,-1464,7037,-9032,-4920,6965,-9869,9930,7991,3776,992,-4040,9247,5801,-2479,-3884,-602,-3010,9243,4649,9524,-7761,9109,9612,6539,-6808,-6843,-8969,1668,-2890,-3036,4422,-4484,-3401,-1224,-2561,-8562,-6868,-9063,2685,-8822,-144,-3201,-4559,-960,-5109,4001,6415,-1644,-7570,8069,9797,-8254,8638,-3469,351,6680,-7298,8777,6206,-626,4561,4952,9007,-6749,7528,6362,-7429,2848,9190,7802,1356,-4381,6541,5371,4982,5864,7454,-2556,-4484,-3626,-7635,-7162,-2610,-2326,-9852,-2814,7697,-7172,-7965,4670,5191,7311,-91,-6142,-1533,-1625,-1209,2036,-4549,2910,5327,690,-4097,4223,-4654,4369,9386,3733,-4898,4945,4770,-8900,2343,-3231,-8610,-2868,2167,-5908,8394,6032,3130,9806,5519,7216,4758,-1579,-8574,541,-5134,8202,7394,1257,6920,-591,7176,-6536,-3948,-1706,-4220,-7661,-392,8108,4704,1713,6035,-731,9783,-5681,-6662,9998,8119,-7160,-5120,-9638,-5950,-8930,1270,-2524,1925,-4845,9070,-7231,7439,-8946,7436,9260,-4144,8426,-170,259,2141,300,8910,1699,-9050,1929,-8729,-5183,-8999,-7326,-6054,988,-4447,-9605,-1275,9451,9718,-8588,8521,-5655,7147,5135,545,5051,-1710,7230,6982,-9504,-9120,-7290,-6481,-3393,-7188,-4600,1077,1737,5340,-1350,1262,8071,-5080,5140,1297,-9954,-4728,-8123,-5807,1864,-1039,-7684,49,1331,4327,7630,-4228,-9237,201,-923,-1922,-7127,7014,8513,-6998,2225,8011,-9166,-3157,-3419,-8565,-1135,2709,-8255,-2204,7243,-7057,5284,-156,-8134,9955,-9966,-6319,-2287,-2754,7897,-1959,5625,-1894,-3811,-541,6647,-9039,4623,-4934,224,1827,6136,-2101,-3518,-937,7777,8074,2814,-5824,6710,-620,-8009,953,-1549,4743,6941,-116,5792,-816,6625,4813,1415,8890,4458,8133,4803,-5223,-2087,-7955,3003,643,-8682,6585,7331,-4312,-8285,-1334,-8000,-867,4262,5451,3193,-8519,-349,7603,4084,5593,-9907,-6242,-4020,7649,-1426,9718,2933,-7456,-8446,5545,5836,5363,8293,4869,-9625,-5114,-545,8201,2406,9870,2728,5772,-7289,-7600,7834,671,-2313,6081,-8695,5488,2901,-410,-811,-492,4482,988,9440,1696,-7962,-1810,-3719,-1292,1248,4288,-5771,7960,6799,2805,683,-7221,-6949,9929,9434,9577,5822,-1605,-5906,9038,9070,8061,524,2443,-2485,-4321,9402,6069,-9767,6958,2134,-3868,-7081,-5951,-7928,-6073,2589,3609,-6038,-3822,9059,-9245,4073,-8700,4008,-5840,-6989,-5238,7904,-9047,2550,-7845,5289,-8929,9377,1910,-6494,-859,-3386,5207,-6870,-696,9174,6640,4721,6137,-1710,-9199,-6161,-4660,5731,-2122,-9959,-808,-4855,9814,6760,-3499,-2947,-3998,-4096,-5850,-5726,-7437,-6432,6451,6947,-8845,1125,3601,-741,4128,-6599,-1210,762,7929,3449,4846,8080,-6125,-4289,-9209,-6949,6750,8567,-3355,6974,-5197,-6210,-378,839,-1455,-8042,-2849,-6079,3843,-7450,9436,6083,741,-5272,-2240,4681,-4795,6553,-3038,-368,-6346,-3433,-851,1318,3524,-8355,1321,9342,-2316,4174,7807,552,8683,8311,8288,-4829,-3235,9855,-5083,835,3751,-6003,951,-3163,4623,-1805,-4002,4409,9686,-5269,-4229,-9454,-4997,-8933,-9999,-8048,6324,-4136,-2699,6126,-6918,4988,8320,-2155,4715,-7488,-8423,7065,5493,-3139,-3876,-5290,8067,-4117,-7035,-9538,2858,-7815,6230,1923,4536,-9419,-2853,-4237,-7207,8615,-9823,-6449,8227,4638,-8238,-4509,475,-7774,4991,-6229,5647,-3440,5296,538,-5605,4496,-10,-5562,6947,-3725,5393,-9596,-9837,-9907,-56,-4691,-5495,-4243,2320,7496,-1196,-5850,-8230,4399,5292,-757,-5328,-8545,-9107,-789,-1715,-8181,5669,-7507,9141,-6268,-7644,-6338,6779,-7872,-2216,3388,-9108,-9871,-8794,-1717,6578,8460,-1449,-9698,9427,7974,879,-7153,3834,2916,-9957,4213,4250,2926,9276,-5109,-365,-2412,-5993,-1680,8968,-2157,8324,2983,5917,-1588,835,5647,-2442,6577,-3135,-7543,4399,-1255,-6398,9915,8209,-8470,-3412,2207,2561,9079,-9244,7630,7931,9042,7534,2726,8927,3152,-3055,3417,-397,7326,7520,-395,3828,-6114,8365,-3293,2751,3213,-6875,-5975,-7198,7212,7971,2734,9266,1683,965,8542,-9928,7591,-9777,-3051,4003,-3225,-1358,-7787,-5776,-2610,9214,-7533,-7147,5319,8174,-2198,4328,-9611,1790,-7562,-3103,9492,-4137,7444,-433,1123,7654,1764,5452,-8513,-9385,-925,-1827,-8734,3126,4765,-5889,5100,-9423,-1581,1095,-9990,8285,-2289,9440,-5983,-2488,5653,-826 };
    check.checkInt(2448889, o.maxResult(nums, 984));

    nums = { -4 };
    check.checkInt(-4, o.maxResult(nums, 3));

    nums = { -1,-2,-3,-4,-5 };
    check.checkInt(-15, o.maxResult(nums, 1));
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
