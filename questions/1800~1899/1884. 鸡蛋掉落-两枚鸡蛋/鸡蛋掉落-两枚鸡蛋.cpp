/* 鸡蛋掉落-两枚鸡蛋.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
给你 2 枚相同 的鸡蛋，和一栋从第 1 层到第 n 层共有 n 层楼的建筑。

已知存在楼层 f ，满足 0 <= f <= n ，任何从 高于 f 的楼层落下的鸡蛋都 会碎 ，从 f 楼层或比它低 的楼层落下的鸡蛋都 不会碎 。

每次操作，你可以取一枚 没有碎 的鸡蛋并把它从任一楼层 x 扔下（满足 1 <= x <= n）。如果鸡蛋碎了，你就不能再次使用它。如果某枚鸡蛋扔下后没有摔碎，则可以在之后的操作中 重复使用 这枚鸡蛋。

请你计算并返回要确定 f 确切的值 的 最小操作次数 是多少？

 

示例 1：

输入：n = 2
输出：2
解释：我们可以将第一枚鸡蛋从 1 楼扔下，然后将第二枚从 2 楼扔下。
如果第一枚鸡蛋碎了，可知 f = 0；
如果第二枚鸡蛋碎了，但第一枚没碎，可知 f = 1；
否则，当两个鸡蛋都没碎时，可知 f = 2。
示例 2：

输入：n = 100
输出：14
 

提示：

1 <= n <= 1000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/egg-drop-with-2-eggs-and-n-floors
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/

#include <iostream>
#include "../check/CheckResult.h"

using namespace std;

class Solution {
public:
    int twoEggDrop(int n) {
        /* 最优策略是选择任意楼层X，如果碎了，接下来逐层尝试；如果没有碎，选择X+X-1层扔，碎了就逐层尝试区间(X,X+X-1)，
           没碎就尝试X+X-1+X-2；最终X+X-1+X-2+...+2+1>=N即可 */
        /* 一元二次方程求解：aX^2 + bX + c = 0， X = (-b +- sqrt(b^2 - 4ac)) / 2a */
        return (int)ceil((-1.0 + sqrt(1 + 8 * n)) / 2);
    }
};

int main()
{
    CheckResult check;
    Solution o;

    check.checkInt(1, o.twoEggDrop(1));
    check.checkInt(2, o.twoEggDrop(2));
    check.checkInt(14, o.twoEggDrop(100));
    check.checkInt(45, o.twoEggDrop(1000));
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
